services:
  gateway:
    build: ./gateway
    ports:
      - "5050:5050"
    depends_on:
      - auth-service
      - user-service
      - post-service
      - stock-service
      - prediction-service
    networks:
      - microservices-network
    volumes:
      - ./gateway:/app
      - /app/node_modules
    environment:
      - PORT=5050
      - AUTH_SERVICE_URL=http://auth-service:5001
      - USER_SERVICE_URL=http://user-service:5002
      - POST_SERVICE_URL=http://post-service:5003
      - STOCK_SERVICE_URL=http://stock-service:5004
      - PREDICTION_SERVICE_URL=http://prediction-service:5005

  auth-service:
    build: ./auth-service
    ports:
      - "5001:5001"
    networks:
      - microservices-network
    depends_on:
      - postgres
    volumes:
      - ./auth-service:/app
      - /app/node_modules
    environment:
      - PORT=5001
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/auth_db
      - JWT_SECRET=your_jwt_secret_key_here
    command: npm start

  user-service:
    build: ./user-service
    ports:
      - "5002:5002"
    networks:
      - microservices-network
    depends_on:
      - postgres
    volumes:
      - ./user-service:/app
      - /app/node_modules
    environment:
      - PORT=5002
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/user_db
      - JWT_SECRET=your_jwt_secret_key_here
    command: npm start

  post-service:
    build: ./post-service
    ports:
      - "5003:5003"
    networks:
      - microservices-network
    depends_on:
      - postgres
    volumes:
      - ./post-service:/app
      - /app/node_modules
    environment:
      - PORT=5003
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/post_db
      - JWT_SECRET=your_jwt_secret_key_here
    command: npm start

  stock-service:
    build: ./stock-service
    ports:
      - "5004:5004"
    networks:
      - microservices-network
    depends_on:
      - postgres
      - redis
    volumes:
      - ./stock-service:/app
      - /app/node_modules
    environment:
      - PORT=5004
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/stock_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your_jwt_secret_key_here
    command: npm start

  prediction-service:
    build: ./prediction-service
    ports:
      - "5005:5005"
    networks:
      - microservices-network
    depends_on:
      - postgres
      - redis
    volumes:
      - ./prediction-service:/app
      - /app/node_modules
    environment:
      - PORT=5005
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/prediction_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your_jwt_secret_key_here
    command: npm start

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - microservices-network
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - microservices-network
    volumes:
      - redis-data:/data

  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - "8080:80"
    networks:
      - microservices-network
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@simplehot.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres

networks:
  microservices-network:
    driver: bridge

volumes:
  postgres-data:
  pgadmin-data:
  redis-data: 